version: "3.8"

services:
    django:
        build: .
        container_name: django
        command: python manage.py runserver 0.0.0.0:8000
        volumes:
            - .:/usr/src/app/
        ports:
            - "8000:8000"
            - "5432:5432"
        environment:
            - DEBUG=${DEBUG}
            - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
            - CELERY_BROKER=${CELERY_BROKER}
            - CELERY_BACKEND=${CELERY_BACKEND}
            - SECRET_KEY=${SECRET_KEY}
            - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
            - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
            - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - WHISPER_API_KEY=${WHISPER_API_KEY}
        depends_on:
            - redis
            - pgdb

    celery:
        build: .
        command: celery -A whispersync worker -l INFO
        volumes:
            - .:/usr/src/app
        environment:
            - DEBUG=${DEBUG}
            - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
            - CELERY_BROKER=${CELERY_BROKER}
            - CELERY_BACKEND=${CELERY_BACKEND}
        depends_on:
            - django
            - redis
    pgdb:
        image: postgres
        container_name: pgdb
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        volumes:
            - pgdata:/var/lib/postgresql/data/
    redis:
        image: "redis:alpine"
    stripe:
        image: stripe/stripe-cli
        command: listen --forward-to django:8000/webhooks/stripe/
        environment:
            - STRIPE_API_KEY=${STRIPE_API_KEY}

volumes:
    pgdata:
